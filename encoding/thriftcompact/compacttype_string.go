// Code generated by "stringer -type compactType -trimprefix _"; DO NOT EDIT.

package thriftcompact

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[_STOP-0]
	_ = x[_BOOLEAN_TRUE-1]
	_ = x[_BOOLEAN_FALSE-2]
	_ = x[_I8-3]
	_ = x[_I16-4]
	_ = x[_I32-5]
	_ = x[_I64-6]
	_ = x[_DOUBLE-7]
	_ = x[_BINARY-8]
	_ = x[_LIST-9]
	_ = x[_SET-10]
	_ = x[_MAP-11]
	_ = x[_STRUCT-12]
	_ = x[_UUID-13]
}

const _compactType_name = "STOPBOOLEAN_TRUEBOOLEAN_FALSEI8I16I32I64DOUBLEBINARYLISTSETMAPSTRUCTUUID"

var _compactType_index = [...]uint8{0, 4, 16, 29, 31, 34, 37, 40, 46, 52, 56, 59, 62, 68, 72}

func (i compactType) String() string {
	if i >= compactType(len(_compactType_index)-1) {
		return "compactType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _compactType_name[_compactType_index[i]:_compactType_index[i+1]]
}
