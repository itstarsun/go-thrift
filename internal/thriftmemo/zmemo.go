// Code generated by "go run tmemogen.go"; DO NOT EDIT.

package thriftmemo

import (
	"io"

	"github.com/itstarsun/go-thrift/encoding/thriftwire"
)

func (m *memoReader) ReadBool() (o0 bool, o1 error) {
	if o1 = m.advance(); o1 != nil {
		return
	}
	m.memo().read("Bool", &o0)
	return
}

func (m *memoReader) ReadByte() (o0 byte, o1 error) {
	if o1 = m.advance(); o1 != nil {
		return
	}
	m.memo().read("Byte", &o0)
	return
}

func (m *memoReader) ReadBytes(i0 []byte) (o0 []byte, o1 error) {
	if o1 = m.advance(); o1 != nil {
		return
	}
	m.memo().read("Bytes", &o0)
	return
}

func (m *memoReader) ReadDouble() (o0 float64, o1 error) {
	if o1 = m.advance(); o1 != nil {
		return
	}
	m.memo().read("Double", &o0)
	return
}

func (m *memoReader) ReadFieldBegin() (o0 thriftwire.FieldHeader, o1 error) {
	if o1 = m.advance(); o1 != nil {
		return
	}
	m.memo().read("FieldBegin", &o0)
	return
}

func (m *memoReader) ReadFieldEnd() (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().read("FieldEnd")
	return
}

func (m *memoReader) ReadI16() (o0 int16, o1 error) {
	if o1 = m.advance(); o1 != nil {
		return
	}
	m.memo().read("I16", &o0)
	return
}

func (m *memoReader) ReadI32() (o0 int32, o1 error) {
	if o1 = m.advance(); o1 != nil {
		return
	}
	m.memo().read("I32", &o0)
	return
}

func (m *memoReader) ReadI64() (o0 int64, o1 error) {
	if o1 = m.advance(); o1 != nil {
		return
	}
	m.memo().read("I64", &o0)
	return
}

func (m *memoReader) ReadListBegin() (o0 thriftwire.ListHeader, o1 error) {
	if o1 = m.advance(); o1 != nil {
		return
	}
	m.memo().read("ListBegin", &o0)
	return
}

func (m *memoReader) ReadListEnd() (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().read("ListEnd")
	return
}

func (m *memoReader) ReadMapBegin() (o0 thriftwire.MapHeader, o1 error) {
	if o1 = m.advance(); o1 != nil {
		return
	}
	m.memo().read("MapBegin", &o0)
	return
}

func (m *memoReader) ReadMapEnd() (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().read("MapEnd")
	return
}

func (m *memoReader) ReadMessageBegin() (o0 thriftwire.MessageHeader, o1 error) {
	if o1 = m.advance(); o1 != nil {
		return
	}
	m.memo().read("MessageBegin", &o0)
	return
}

func (m *memoReader) ReadMessageEnd() (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().read("MessageEnd")
	return
}

func (m *memoReader) ReadSetBegin() (o0 thriftwire.SetHeader, o1 error) {
	if o1 = m.advance(); o1 != nil {
		return
	}
	m.memo().read("SetBegin", &o0)
	return
}

func (m *memoReader) ReadSetEnd() (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().read("SetEnd")
	return
}

func (m *memoReader) ReadString() (o0 string, o1 error) {
	if o1 = m.advance(); o1 != nil {
		return
	}
	m.memo().read("String", &o0)
	return
}

func (m *memoReader) ReadStructBegin() (o0 thriftwire.StructHeader, o1 error) {
	if o1 = m.advance(); o1 != nil {
		return
	}
	m.memo().read("StructBegin", &o0)
	return
}

func (m *memoReader) ReadStructEnd() (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().read("StructEnd")
	return
}

func (m *memoReader) ReadUUID(i0 *[16]byte) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().read("UUID", i0)
	return
}

func (m *memoReader) Reset(i0 io.Reader) {
	panic("unsupported")
}

func (m *memoReader) SkipString() (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	var tmp string
	m.memo().read("String", &tmp)
	return
}

func (m *memoReader) SkipUUID() (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	var tmp [16]byte
	m.memo().read("UUID", &tmp)
	return
}

func (m *memoWriter) Flush() (o0 error) {
	panic("unsupported")
}

func (m *memoWriter) Reset(i0 io.Writer) {
	panic("unsupported")
}

func (m *memoWriter) WriteBool(i0 bool) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("Bool", i0)
	return
}

func (m *memoWriter) WriteByte(i0 byte) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("Byte", i0)
	return
}

func (m *memoWriter) WriteBytes(i0 []byte) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("Bytes", i0)
	return
}

func (m *memoWriter) WriteDouble(i0 float64) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("Double", i0)
	return
}

func (m *memoWriter) WriteFieldBegin(i0 thriftwire.FieldHeader) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("FieldBegin", i0)
	return
}

func (m *memoWriter) WriteFieldEnd() (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("FieldEnd")
	return
}

func (m *memoWriter) WriteI16(i0 int16) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("I16", i0)
	return
}

func (m *memoWriter) WriteI32(i0 int32) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("I32", i0)
	return
}

func (m *memoWriter) WriteI64(i0 int64) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("I64", i0)
	return
}

func (m *memoWriter) WriteListBegin(i0 thriftwire.ListHeader) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("ListBegin", i0)
	return
}

func (m *memoWriter) WriteListEnd() (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("ListEnd")
	return
}

func (m *memoWriter) WriteMapBegin(i0 thriftwire.MapHeader) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("MapBegin", i0)
	return
}

func (m *memoWriter) WriteMapEnd() (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("MapEnd")
	return
}

func (m *memoWriter) WriteMessageBegin(i0 thriftwire.MessageHeader) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("MessageBegin", i0)
	return
}

func (m *memoWriter) WriteMessageEnd() (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("MessageEnd")
	return
}

func (m *memoWriter) WriteSetBegin(i0 thriftwire.SetHeader) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("SetBegin", i0)
	return
}

func (m *memoWriter) WriteSetEnd() (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("SetEnd")
	return
}

func (m *memoWriter) WriteString(i0 string) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("String", i0)
	return
}

func (m *memoWriter) WriteStructBegin(i0 thriftwire.StructHeader) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("StructBegin", i0)
	return
}

func (m *memoWriter) WriteStructEnd() (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("FieldBegin", thriftwire.FieldHeader{Name: "", Type: 0x0, ID: 0})
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("StructEnd")
	return
}

func (m *memoWriter) WriteUUID(i0 *[16]byte) (o0 error) {
	if o0 = m.advance(); o0 != nil {
		return
	}
	m.memo().write("UUID", *i0)
	return
}
